<?php

namespace Composer
{
    class Config
    {
        /**
         * Returns a setting
         *
         * @template T as string
         * @param T $key
         * @param int $flags
         * @psalm-return (T is 'vendor-dir' ? string|null : mixed)
         */
        public function get($key, $flags = 0)
        { 
        }
    }
}

namespace Composer\Installer
{
    class LibraryInstaller
    {
        /**
         * @var \Composer\Composer
         */
        protected $composer;

        /**
         * @var \Composer\Util\Filesystem
         */
        protected $filesystem;

        /**
         * For test runs with Composer 1
         * @return \React\Promise\PromiseInterface|null
         */
        public function install();

        /**
         * For test runs with Composer 1
         * @return \React\Promise\PromiseInterface|null
         */
        public function update();
    }
}

// for test runs with Composer 1
namespace React\Promise
{
    class PromiseInterface
    {
        /**
         * @return \React\Promise\PromiseInterface
         */
        public function then(callable $onFulfilled = null, callable $onRejected = null, callable $onProgress = null);
    }
}
